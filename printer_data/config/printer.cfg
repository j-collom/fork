##
## If you get this error: Move out of range: 1000.000 1000.000 15.000 [0.000]
## then you need to edit the klicky.cfg file and set the correct values of 
## variable_z_endstop_x and variable_z_endstop_y for your printer. 
## 
## For a salad fork 160, this is usually somewhere around 93, 164 but it will
## be different for each and every printer!
## 
## 
## If you are having problems with the klicky probe not being picked up or docked  
## properly, go into the klicky.cfg and adjust the values of variable_docklocation_x 
## and variable_docklocation_y to fit your specific printer.
## 
## 
## 




################################################################################################################################# 
################################################################################################################################# 
################################################################################################################################# 
################################################################################################################################# 
## 
## 
## 
## This example setup is based on an M8P MCU with an EBB36 CAN toolhead. This WILL need to be adjusted for your hardware!!!
## 
## 
## 
################################################################################################################################# 
################################################################################################################################# 
################################################################################################################################# 
################################################################################################################################# 


## ----------------------------------------
## MCU Setup
## ----------------------------------------

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_23001A000B51313236343430-if00


## can0
[mcu can0]
# run the following command to locate the uuid:
# ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
canbus_uuid: cdb8b414e1c7


## ----------------------------------------
## Macros
## ----------------------------------------
[include fluidd.cfg]
[include klicky-probe.cfg]
# Go to the klicky github repo at https://github.com/jlas1/Klicky-Probe and grab the latest version of the klicky macros first!

[exclude_object]

## EXTRUDER MOTOR
[tmc2209 extruder]
uart_pin: can0:EXT_UART
interpolate: true
sense_resistor: 0.11
stealthchop_threshold: 0
run_current: 0.30

[verify_heater extruder]

max_error:  140


[idle_timeout]
timeout: 1800


[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_z_velocity: 10
max_z_accel: 30

[mcu]
restart_method: command

####################################################################
## STEPPER CONFIGURATIONS
####################################################################

## Stepper X configuration
## ----------------------------------------
[stepper_x]
##  B Stepper - Left
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
endstop_pin: tmc2209_stepper_y:virtual_endstop

rotation_distance: 32
microsteps: 16
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
position_min: 0
homing_speed: 125  
homing_retract_dist: 5
homing_positive_dir: true

# Stepper X UART config
# ----------------------------------------
[tmc2209 stepper_x]
uart_pin: PC10 
interpolate: True
run_current: 0.5        # For V0.1 spec NEMA14 40Ncm
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 125

## Stepper Y configuration
## ----------------------------------------
[stepper_y]
##  A Stepper - Right
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
endstop_pin: tmc2209_stepper_y:virtual_endstop

rotation_distance: 32
microsteps: 16
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
position_min: 0
homing_speed: 125  
homing_retract_dist: 5
homing_positive_dir: true

# Stepper Y UART config
# ----------------------------------------
[tmc2209 stepper_y]
uart_pin: PF13
interpolate: True
run_current: 0.5        # For V0.1 spec NEMA14 40Ncm
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 130 

## Z Stepper - Left Z Motor configuration
## ----------------------------------------
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
endstop_pin: probe:z_virtual_endstop

rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
homing_speed: 8.0 
second_homing_speed: 3
homing_retract_dist: 3


##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 1

# All builds use same Max Z
position_max: 150
position_min: -5

# Stepper Z UART config
# ----------------------------------------
[tmc2209 stepper_z]
uart_pin: PF9
run_current: 0.37       # For V0.1 spec NEMA17 LDO-42STH25-1004CL200E 1.0A  
#run_current: 0.2         # For V0.1 spec NEMA17 OMC 17LS13-0404E-200G 0.4A 
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 45


## Z1 Stepper - Rear Z Motor configuration
## ----------------------------------------
[stepper_z1]
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5

rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

# Stepper Z UART config
# ----------------------------------------
[tmc2209 stepper_z1]
uart_pin: PD4
run_current: 0.4    # For V0.1 spec NEMA17 LDO-42STH25-1004CL200E 1.0A  
#run_current: 0.2         # For V0.1 spec NEMA17 OMC 17LS13-0404E-200G 0.4A 
sense_resistor: 0.110
stealthchop_threshold: 0


## Z2 Stepper - Right Z Motor configuration
## ----------------------------------------
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1

rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

# Stepper Z UART config
# ----------------------------------------
[tmc2209 stepper_z2]
uart_pin: PD0
run_current: 0.37       # For V0.1 spec NEMA17 LDO-42STH25-1004CL200E 1.0A  
#run_current: 0.2         # For V0.1 spec NEMA17 OMC 17LS13-0404E-200G 0.4A 
sense_resistor: 0.110
stealthchop_threshold: 0


####################################################################
## EXTRUDER CONFIGURATIONS
####################################################################

[extruder]
step_pin: can0:PD0
dir_pin: !can0:PD1
enable_pin: !can0:PD2
heater_pin: can0:PB13
sensor_pin: can0:PA3

# sensor_type: ATC Semitec 104GT-2  # this is the default for the Revo heater
# sensor_type: Generic 3950
sensor_type: ATC Semitec 104NT

rotation_distance: 4.637  # See calibrating rotation_distance on extruders doc
#gear_ratio: 50:10  # For Mini Afterburner
microsteps: 16

full_steps_per_rotation: 200  #1.8deg Motor
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
nozzle_diameter: 0.400
filament_diameter: 1.750
pullup_resistor: 4700
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 1
max_temp: 350

## EXTRUDER MOTOR
[tmc2209 extruder]
uart_pin: can0:PA15
stealthchop_threshold: 0
run_current: 0.45

####################################################################
## FAN CONFIGURATIONS
####################################################################

# Hotend fan
# ----------------------------------------
[heater_fan hotend_fan]
pin: can0:PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0


# Part cooling fan
# ----------------------------------------
[fan]
pin: can0:PA0
kick_start_time: 0.25
cycle_time: 0.15
off_below: 0.10


# Electronics bay cooling fan
# ----------------------------------------
[heater_fan electronics_fan]
pin: PE6
kick_start_time: 2
# off_below: 0.10
max_power: 0.25
heater: extruder
heater_temp: 50.0
shutdown_speed: 0



####################################################################
## TEMPERATURE CONFIGURATIONS
####################################################################
[temperature_sensor RaspberryPi]
sensor_type: temperature_host

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[temperature_sensor EBB36]
sensor_type: temperature_mcu
sensor_mcu: can0
min_temp: 15
max_temp: 100

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 15
max_temp: 100
gcode_id: chamber_th


####################################################################
## MISC CONFIGURATIONS
####################################################################

# Klicky probe 
# ----------------------------------------

[probe]
pin: ^can0:PB5
x_offset: 0
y_offset: 25
z_offset: 5.350

lift_speed: 5.0
speed: 3

samples: 4
sample_retract_dist: 2

samples_result: median
samples_tolerance: 0.015
samples_tolerance_retries: 5



# Bed heater
# ----------------------------------------
[heater_bed]
heater_pin: PB7
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA0
max_power: 1.0
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################
#[gcode_macro HOME]
#gcode:
#    G90
#    # Home Z
#    G1 X80 Y80
#    G28 Z0
#    G1 Z10 F1200
#    # Home Y
#    G28 Y0
#    G1 Y5 F1200
#    # Home X
#    G4 P200
#    G28 X0
#    G1 X5 F1200
#___________________________________________

[idle_timeout]
timeout: 1800
#####################################################################
##  Homing
#####################################################################
[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 80,80
speed:100
z_hop:10 

####################################################################
## Z TILT CONFIGURATION
####################################################################

[z_tilt]
z_positions:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
    # For 120 build
    # -50, -13
    # 60, 167
    # 153, -13

    # For 160 build
     -50, -13
     80, 197
     197, -13

    # For 180 build
    # -50, -13
    # 90, 217
    # 213, -13


points:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
    # For 120 build
    # 20, 10
    # 60, 100
    # 100, 10

    # For 160 build
    20, 10
    80, 135
    140, 10

    # For 180 build
    # 20, 10
    # 90, 155
    # 160, 10


speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 15
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.


####################################################################
## BED MESH CONFIGURATION
####################################################################

[bed_mesh]
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
speed: 250

#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
horizontal_move_z: 5

#   Defines the minimum x,y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_min:
    10, 10

#   Defines the maximum x,y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
mesh_max:
    # 110, 110  # For 120 build
    150, 150  # For 160 build
    # 170, 170  # For 180 build

#####################################################################
## Define ADXL345 for input shaping                                ##
#####################################################################

[adxl345]
cs_pin: can0:ADXL_CS
spi_software_sclk_pin: can0:ADXL_SCLK
spi_software_mosi_pin: can0:ADXL_MOSI
spi_software_miso_pin: can0:ADXL_MISO
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    80,80,20 

####################################################################
## PERSONAL CONFIGURATIONS
####################################################################